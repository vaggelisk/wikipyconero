{"remainingRequest":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js??ref--0-1!/home/kantro/WebstormProjects/wikipyconero/node_modules/vuetify/lib/components/VTabs/VTabs.js","dependencies":[{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/vuetify/lib/components/VTabs/VTabs.js","mtime":1695231284816},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/cache-loader/dist/cjs.js","mtime":1694896091905},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js","mtime":1694896091857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}