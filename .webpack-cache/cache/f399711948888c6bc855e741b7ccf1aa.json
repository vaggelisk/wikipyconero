{"remainingRequest":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js??ref--0-1!/home/kantro/WebstormProjects/wikipyconero/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kantro/WebstormProjects/wikipyconero/client/components/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kantro/WebstormProjects/wikipyconero/client/components/register.vue","mtime":1695287603867},{"path":"/home/kantro/WebstormProjects/wikipyconero/.babelrc","mtime":1695287603859},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/cache-loader/dist/cjs.js","mtime":1694896091905},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js","mtime":1694896091857},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/vue-loader/lib/index.js","mtime":1695231282570}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9nZXQgZnJvbSAibG9kYXNoL2dldCI7CmltcG9ydCBfaGFzIGZyb20gImxvZGFzaC9oYXMiOyAvLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBnbG9iYWwgc2l0ZUNvbmZpZyAqLwppbXBvcnQgdmFsaWRhdGUgZnJvbSAndmFsaWRhdGUuanMnOwppbXBvcnQgUGFzc3dvcmRTdHJlbmd0aCBmcm9tICcuL2NvbW1vbi9wYXNzd29yZC1zdHJlbmd0aC52dWUnOwppbXBvcnQgcmVnaXN0ZXJNdXRhdGlvbiBmcm9tICdncWwvcmVnaXN0ZXIvcmVnaXN0ZXItbXV0YXRpb24tY3JlYXRlLmdxbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBpMThuT3B0aW9uczogewogICAgbmFtZXNwYWNlczogJ2F1dGgnCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBQYXNzd29yZFN0cmVuZ3RoCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIHZlcmlmeVBhc3N3b3JkOiAnJywKICAgICAgbmFtZTogJycsCiAgICAgIGhpZGVQYXNzd29yZDogdHJ1ZSwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgaXNTaG93bjogZmFsc2UsCiAgICAgIGxvYWRlckNvbG9yOiAnZ3JleSBkYXJrZW4tNCcsCiAgICAgIGxvYWRlclRpdGxlOiAnV29ya2luZy4uLicsCiAgICAgIGxvYWRlclN1YnRpdGxlOiAnUGxlYXNlIHdhaXQnLAogICAgICBsb2FkZXJNb2RlOiAnaWNvbicsCiAgICAgIGxvYWRlckljb246ICdjaGVja21hcmsnCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNpdGVUaXRsZSgpIHsKICAgICAgcmV0dXJuIHNpdGVDb25maWcudGl0bGU7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pc1Nob3duID0gdHJ1ZTsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy4kcmVmcy5pcHRFbWFpbC5mb2N1cygpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIFJFR0lTVEVSCiAgICAgKi8KICAgIGFzeW5jIHJlZ2lzdGVyKCkgewogICAgICBjb25zdCB2YWxpZGF0aW9uID0gdmFsaWRhdGUoewogICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLAogICAgICAgIHZlcmlmeVBhc3N3b3JkOiB0aGlzLnZlcmlmeVBhc3N3b3JkLAogICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICB9LCB7CiAgICAgICAgZW1haWw6IHsKICAgICAgICAgIHByZXNlbmNlOiB7CiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ2F1dGg6bWlzc2luZ0VtYWlsJyksCiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgZW1haWw6IHsKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnYXV0aDppbnZhbGlkRW1haWwnKQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcGFzc3dvcmQ6IHsKICAgICAgICAgIHByZXNlbmNlOiB7CiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ2F1dGg6bWlzc2luZ1Bhc3N3b3JkJyksCiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgbGVuZ3RoOiB7CiAgICAgICAgICAgIG1pbmltdW06IDYsCiAgICAgICAgICAgIHRvb1Nob3J0OiB0aGlzLiR0KCdhdXRoOnBhc3N3b3JkVG9vU2hvcnQnKQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdmVyaWZ5UGFzc3dvcmQ6IHsKICAgICAgICAgIGVxdWFsaXR5OiB7CiAgICAgICAgICAgIGF0dHJpYnV0ZTogJ3Bhc3N3b3JkJywKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgnYXV0aDpwYXNzd29yZE5vdE1hdGNoJykKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG5hbWU6IHsKICAgICAgICAgIHByZXNlbmNlOiB7CiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHQoJ2F1dGg6bWlzc2luZ05hbWUnKSwKICAgICAgICAgICAgYWxsb3dFbXB0eTogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBsZW5ndGg6IHsKICAgICAgICAgICAgbWluaW11bTogMiwKICAgICAgICAgICAgbWF4aW11bTogMjU1LAogICAgICAgICAgICB0b29TaG9ydDogdGhpcy4kdCgnYXV0aDpuYW1lVG9vU2hvcnQnKSwKICAgICAgICAgICAgdG9vTG9uZzogdGhpcy4kdCgnYXV0aDpuYW1lVG9vTG9uZycpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgZnVsbE1lc3NhZ2VzOiBmYWxzZQogICAgICB9KTsKICAgICAgaWYgKHZhbGlkYXRpb24pIHsKICAgICAgICBpZiAodmFsaWRhdGlvbi5lbWFpbCkgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgICAgICBzdHlsZTogJ3JlZCcsCiAgICAgICAgICAgIG1lc3NhZ2U6IHZhbGlkYXRpb24uZW1haWxbMF0sCiAgICAgICAgICAgIGljb246ICd3YXJuaW5nJwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLiRyZWZzLmlwdEVtYWlsLmZvY3VzKCk7CiAgICAgICAgfSBlbHNlIGlmICh2YWxpZGF0aW9uLnBhc3N3b3JkKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgIHN0eWxlOiAncmVkJywKICAgICAgICAgICAgbWVzc2FnZTogdmFsaWRhdGlvbi5wYXNzd29yZFswXSwKICAgICAgICAgICAgaWNvbjogJ3dhcm5pbmcnCiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuJHJlZnMuaXB0UGFzc3dvcmQuZm9jdXMoKTsKICAgICAgICB9IGVsc2UgaWYgKHZhbGlkYXRpb24udmVyaWZ5UGFzc3dvcmQpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2hvd05vdGlmaWNhdGlvbicsIHsKICAgICAgICAgICAgc3R5bGU6ICdyZWQnLAogICAgICAgICAgICBtZXNzYWdlOiB2YWxpZGF0aW9uLnZlcmlmeVBhc3N3b3JkWzBdLAogICAgICAgICAgICBpY29uOiAnd2FybmluZycKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kcmVmcy5pcHRWZXJpZnlQYXNzd29yZC5mb2N1cygpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3Nob3dOb3RpZmljYXRpb24nLCB7CiAgICAgICAgICAgIHN0eWxlOiAncmVkJywKICAgICAgICAgICAgbWVzc2FnZTogdmFsaWRhdGlvbi5uYW1lWzBdLAogICAgICAgICAgICBpY29uOiAnd2FybmluZycKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kcmVmcy5pcHROYW1lLmZvY3VzKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMubG9hZGVyQ29sb3IgPSAnZ3JleSBkYXJrZW4tNCc7CiAgICAgICAgdGhpcy5sb2FkZXJUaXRsZSA9IHRoaXMuJHQoJ2F1dGg6cmVnaXN0ZXJpbmcnKTsKICAgICAgICB0aGlzLmxvYWRlclN1YnRpdGxlID0gdGhpcy4kdChgYXV0aDpwbGVhc2VXYWl0YCk7CiAgICAgICAgdGhpcy5sb2FkZXJNb2RlID0gJ2xvYWRpbmcnOwogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgICB0cnkgewogICAgICAgICAgbGV0IHJlc3AgPSBhd2FpdCB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgbXV0YXRpb246IHJlZ2lzdGVyTXV0YXRpb24sCiAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLAogICAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIGlmIChfaGFzKHJlc3AsICdkYXRhLmF1dGhlbnRpY2F0aW9uLnJlZ2lzdGVyJykpIHsKICAgICAgICAgICAgbGV0IHJlc3BPYmogPSBfZ2V0KHJlc3AsICdkYXRhLmF1dGhlbnRpY2F0aW9uLnJlZ2lzdGVyJywge30pOwogICAgICAgICAgICBpZiAocmVzcE9iai5yZXNwb25zZVJlc3VsdC5zdWNjZWVkZWQgPT09IHRydWUpIHsKICAgICAgICAgICAgICB0aGlzLmxvYWRlckNvbG9yID0gJ2dyZXkgZGFya2VuLTQnOwogICAgICAgICAgICAgIHRoaXMubG9hZGVyVGl0bGUgPSB0aGlzLiR0KCdhdXRoOnJlZ2lzdGVyU3VjY2VzcycpOwogICAgICAgICAgICAgIHRoaXMubG9hZGVyU3VidGl0bGUgPSB0aGlzLiR0KGBhdXRoOnJlZ2lzdGVyQ2hlY2tFbWFpbGApOwogICAgICAgICAgICAgIHRoaXMubG9hZGVyTW9kZSA9ICdpY29uJzsKICAgICAgICAgICAgICB0aGlzLmlzU2hvd24gPSBmYWxzZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzcE9iai5yZXNwb25zZVJlc3VsdC5tZXNzYWdlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuJHQoJ2F1dGg6Z2VuZXJpY0Vycm9yJykpOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzaG93Tm90aWZpY2F0aW9uJywgewogICAgICAgICAgICBzdHlsZTogJ3JlZCcsCiAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLAogICAgICAgICAgICBpY29uOiAnd2FybmluZycKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},null]}