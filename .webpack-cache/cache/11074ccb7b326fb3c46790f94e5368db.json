{"remainingRequest":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js??ref--0-1!/home/kantro/WebstormProjects/wikipyconero/node_modules/vuetify/lib/mixins/overlayable/index.js","dependencies":[{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/vuetify/lib/mixins/overlayable/index.js","mtime":1695231284816},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/cache-loader/dist/cjs.js","mtime":1694896091905},{"path":"/home/kantro/WebstormProjects/wikipyconero/node_modules/babel-loader/lib/index.js","mtime":1694896091857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQ29tcG9uZW50cwppbXBvcnQgVk92ZXJsYXkgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9WT3ZlcmxheSc7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsga2V5Q29kZXMsIGFkZE9uY2VFdmVudExpc3RlbmVyLCBhZGRQYXNzaXZlRXZlbnRMaXN0ZW5lciwgZ2V0WkluZGV4IH0gZnJvbSAnLi4vLi4vdXRpbC9oZWxwZXJzJzsgLy8gVHlwZXMKCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKLyogQHZ1ZS9jb21wb25lbnQgKi8KCmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoKS5leHRlbmQoewogIG5hbWU6ICdvdmVybGF5YWJsZScsCiAgcHJvcHM6IHsKICAgIGhpZGVPdmVybGF5OiBCb29sZWFuLAogICAgb3ZlcmxheUNvbG9yOiBTdHJpbmcsCiAgICBvdmVybGF5T3BhY2l0eTogW051bWJlciwgU3RyaW5nXQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFuaW1hdGlvbkZyYW1lOiAwLAogICAgICBvdmVybGF5OiBudWxsCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGhpZGVPdmVybGF5KHZhbHVlKSB7CiAgICAgIGlmICghdGhpcy5pc0FjdGl2ZSkgcmV0dXJuOwogICAgICBpZiAodmFsdWUpIHRoaXMucmVtb3ZlT3ZlcmxheSgpO2Vsc2UgdGhpcy5nZW5PdmVybGF5KCk7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5yZW1vdmVPdmVybGF5KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjcmVhdGVPdmVybGF5KCkgewogICAgICBjb25zdCBvdmVybGF5ID0gbmV3IFZPdmVybGF5KHsKICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgIGFic29sdXRlOiB0aGlzLmFic29sdXRlLAogICAgICAgICAgdmFsdWU6IGZhbHNlLAogICAgICAgICAgY29sb3I6IHRoaXMub3ZlcmxheUNvbG9yLAogICAgICAgICAgb3BhY2l0eTogdGhpcy5vdmVybGF5T3BhY2l0eQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIG92ZXJsYXkuJG1vdW50KCk7CiAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuYWJzb2x1dGUgPyB0aGlzLiRlbC5wYXJlbnROb2RlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpOwogICAgICBwYXJlbnQgJiYgcGFyZW50Lmluc2VydEJlZm9yZShvdmVybGF5LiRlbCwgcGFyZW50LmZpcnN0Q2hpbGQpOwogICAgICB0aGlzLm92ZXJsYXkgPSBvdmVybGF5OwogICAgfSwKICAgIGdlbk92ZXJsYXkoKSB7CiAgICAgIHRoaXMuaGlkZVNjcm9sbCgpOwogICAgICBpZiAodGhpcy5oaWRlT3ZlcmxheSkgcmV0dXJuOwogICAgICBpZiAoIXRoaXMub3ZlcmxheSkgdGhpcy5jcmVhdGVPdmVybGF5KCk7CiAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gewogICAgICAgIGlmICghdGhpcy5vdmVybGF5KSByZXR1cm47CiAgICAgICAgaWYgKHRoaXMuYWN0aXZlWkluZGV4ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHRoaXMub3ZlcmxheS56SW5kZXggPSBTdHJpbmcodGhpcy5hY3RpdmVaSW5kZXggLSAxKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuJGVsKSB7CiAgICAgICAgICB0aGlzLm92ZXJsYXkuekluZGV4ID0gZ2V0WkluZGV4KHRoaXMuJGVsKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5vdmVybGF5LnZhbHVlID0gdHJ1ZTsKICAgICAgfSk7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIC8qKiByZW1vdmVPdmVybGF5KGZhbHNlKSB3aWxsIG5vdCByZXN0b3JlIHRoZSBzY29sbGJhciBhZnRlcndhcmRzICovCiAgICByZW1vdmVPdmVybGF5KCkgewogICAgICBsZXQgc2hvd1Njcm9sbCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogdHJ1ZTsKICAgICAgaWYgKHRoaXMub3ZlcmxheSkgewogICAgICAgIGFkZE9uY2VFdmVudExpc3RlbmVyKHRoaXMub3ZlcmxheS4kZWwsICd0cmFuc2l0aW9uZW5kJywgKCkgPT4gewogICAgICAgICAgaWYgKCF0aGlzLm92ZXJsYXkgfHwgIXRoaXMub3ZlcmxheS4kZWwgfHwgIXRoaXMub3ZlcmxheS4kZWwucGFyZW50Tm9kZSB8fCB0aGlzLm92ZXJsYXkudmFsdWUpIHJldHVybjsKICAgICAgICAgIHRoaXMub3ZlcmxheS4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLm92ZXJsYXkuJGVsKTsKICAgICAgICAgIHRoaXMub3ZlcmxheS4kZGVzdHJveSgpOwogICAgICAgICAgdGhpcy5vdmVybGF5ID0gbnVsbDsKICAgICAgICB9KTsgLy8gQ2FuY2VsIGFuaW1hdGlvbiBmcmFtZSBpbiBjYXNlCiAgICAgICAgLy8gb3ZlcmxheSBpcyByZW1vdmVkIGJlZm9yZSBpdAogICAgICAgIC8vIGhhcyBmaW5pc2hlZCBpdHMgYW5pbWF0aW9uCgogICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uRnJhbWUpOwogICAgICAgIHRoaXMub3ZlcmxheS52YWx1ZSA9IGZhbHNlOwogICAgICB9CiAgICAgIHNob3dTY3JvbGwgJiYgdGhpcy5zaG93U2Nyb2xsKCk7CiAgICB9LAogICAgc2Nyb2xsTGlzdGVuZXIoZSkgewogICAgICBpZiAoZS50eXBlID09PSAna2V5ZG93bicpIHsKICAgICAgICBpZiAoWydJTlBVVCcsICdURVhUQVJFQScsICdTRUxFQ1QnXS5pbmNsdWRlcyhlLnRhcmdldC50YWdOYW1lKSB8fAogICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNDcxNQogICAgICAgIGUudGFyZ2V0LmlzQ29udGVudEVkaXRhYmxlKSByZXR1cm47CiAgICAgICAgY29uc3QgdXAgPSBba2V5Q29kZXMudXAsIGtleUNvZGVzLnBhZ2V1cF07CiAgICAgICAgY29uc3QgZG93biA9IFtrZXlDb2Rlcy5kb3duLCBrZXlDb2Rlcy5wYWdlZG93bl07CiAgICAgICAgaWYgKHVwLmluY2x1ZGVzKGUua2V5Q29kZSkpIHsKICAgICAgICAgIGUuZGVsdGFZID0gLTE7CiAgICAgICAgfSBlbHNlIGlmIChkb3duLmluY2x1ZGVzKGUua2V5Q29kZSkpIHsKICAgICAgICAgIGUuZGVsdGFZID0gMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgfQogICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMub3ZlcmxheSB8fCBlLnR5cGUgIT09ICdrZXlkb3duJyAmJiBlLnRhcmdldCA9PT0gZG9jdW1lbnQuYm9keSB8fCB0aGlzLmNoZWNrUGF0aChlKSkgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSwKICAgIGhhc1Njcm9sbGJhcihlbCkgewogICAgICBpZiAoIWVsIHx8IGVsLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkgcmV0dXJuIGZhbHNlOwogICAgICBjb25zdCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTsKICAgICAgcmV0dXJuIFsnYXV0bycsICdzY3JvbGwnXS5pbmNsdWRlcyhzdHlsZS5vdmVyZmxvd1kpICYmIGVsLnNjcm9sbEhlaWdodCA+IGVsLmNsaWVudEhlaWdodDsKICAgIH0sCiAgICBzaG91bGRTY3JvbGwoZWwsIGRlbHRhKSB7CiAgICAgIGlmIChlbC5zY3JvbGxUb3AgPT09IDAgJiYgZGVsdGEgPCAwKSByZXR1cm4gdHJ1ZTsKICAgICAgcmV0dXJuIGVsLnNjcm9sbFRvcCArIGVsLmNsaWVudEhlaWdodCA9PT0gZWwuc2Nyb2xsSGVpZ2h0ICYmIGRlbHRhID4gMDsKICAgIH0sCiAgICBpc0luc2lkZShlbCwgcGFyZW50KSB7CiAgICAgIGlmIChlbCA9PT0gcGFyZW50KSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSBpZiAoZWwgPT09IG51bGwgfHwgZWwgPT09IGRvY3VtZW50LmJvZHkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaXNJbnNpZGUoZWwucGFyZW50Tm9kZSwgcGFyZW50KTsKICAgICAgfQogICAgfSwKICAgIGNoZWNrUGF0aChlKSB7CiAgICAgIGNvbnN0IHBhdGggPSBlLnBhdGggfHwgdGhpcy5jb21wb3NlZFBhdGgoZSk7CiAgICAgIGNvbnN0IGRlbHRhID0gZS5kZWx0YVk7CiAgICAgIGlmIChlLnR5cGUgPT09ICdrZXlkb3duJyAmJiBwYXRoWzBdID09PSBkb2N1bWVudC5ib2R5KSB7CiAgICAgICAgY29uc3QgZGlhbG9nID0gdGhpcy4kcmVmcy5kaWFsb2c7IC8vIGdldFNlbGVjdGlvbiByZXR1cm5zIG51bGwgaW4gZmlyZWZveCBpbiBzb21lIGVkZ2UgY2FzZXMsIGNhbiBiZSBpZ25vcmVkCgogICAgICAgIGNvbnN0IHNlbGVjdGVkID0gd2luZG93LmdldFNlbGVjdGlvbigpLmFuY2hvck5vZGU7CiAgICAgICAgaWYgKGRpYWxvZyAmJiB0aGlzLmhhc1Njcm9sbGJhcihkaWFsb2cpICYmIHRoaXMuaXNJbnNpZGUoc2VsZWN0ZWQsIGRpYWxvZykpIHsKICAgICAgICAgIHJldHVybiB0aGlzLnNob3VsZFNjcm9sbChkaWFsb2csIGRlbHRhKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHBhdGgubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgY29uc3QgZWwgPSBwYXRoW2luZGV4XTsKICAgICAgICBpZiAoZWwgPT09IGRvY3VtZW50KSByZXR1cm4gdHJ1ZTsKICAgICAgICBpZiAoZWwgPT09IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKGVsID09PSB0aGlzLiRyZWZzLmNvbnRlbnQpIHJldHVybiB0cnVlOwogICAgICAgIGlmICh0aGlzLmhhc1Njcm9sbGJhcihlbCkpIHJldHVybiB0aGlzLnNob3VsZFNjcm9sbChlbCwgZGVsdGEpOwogICAgICB9CiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIC8qKgogICAgICogUG9seWZpbGwgZm9yIEV2ZW50LnByb3RvdHlwZS5jb21wb3NlZFBhdGgKICAgICAqLwogICAgY29tcG9zZWRQYXRoKGUpIHsKICAgICAgaWYgKGUuY29tcG9zZWRQYXRoKSByZXR1cm4gZS5jb21wb3NlZFBhdGgoKTsKICAgICAgY29uc3QgcGF0aCA9IFtdOwogICAgICBsZXQgZWwgPSBlLnRhcmdldDsKICAgICAgd2hpbGUgKGVsKSB7CiAgICAgICAgcGF0aC5wdXNoKGVsKTsKICAgICAgICBpZiAoZWwudGFnTmFtZSA9PT0gJ0hUTUwnKSB7CiAgICAgICAgICBwYXRoLnB1c2goZG9jdW1lbnQpOwogICAgICAgICAgcGF0aC5wdXNoKHdpbmRvdyk7CiAgICAgICAgICByZXR1cm4gcGF0aDsKICAgICAgICB9CiAgICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50OwogICAgICB9CiAgICAgIHJldHVybiBwYXRoOwogICAgfSwKICAgIGhpZGVTY3JvbGwoKSB7CiAgICAgIGlmICh0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQuc21BbmREb3duKSB7CiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ292ZXJmbG93LXktaGlkZGVuJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYWRkUGFzc2l2ZUV2ZW50TGlzdGVuZXIod2luZG93LCAnd2hlZWwnLCB0aGlzLnNjcm9sbExpc3RlbmVyLCB7CiAgICAgICAgICBwYXNzaXZlOiBmYWxzZQogICAgICAgIH0pOwogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7CiAgICAgIH0KICAgIH0sCiAgICBzaG93U2Nyb2xsKCkgewogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnb3ZlcmZsb3cteS1oaWRkZW4nKTsKICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7CiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7CiAgICB9CiAgfQp9KTs="},null]}